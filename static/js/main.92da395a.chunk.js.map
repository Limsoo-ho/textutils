{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","role","placeholder","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","Alert","alert","word","lower","charAt","slice","capitalize","msg","data-bs-dismiss","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","Components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.92da395a.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n//import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <a className=\"navbar-brand\" href=\"# \">{props.title}</a>\r\n      {/*<Link className=\"navbar-brand\" to=\"/ \">{props.title}</Link>*/}\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n           <a className=\"nav-link active\" aria-current=\"page\" href=\"# \">Home</a>\r\n           {/* <Link className='nav-link active' aria-current=\"page\" to={`/`}>Home</Link>*/}\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"# \">{props.aboutText}</a>\r\n           {/* <Link className='nav-link' to={`/about`}>{props.aboutText}</Link>*/}\r\n          </li>\r\n          <li className=\"nav-item dropdown\">\r\n            <a className=\"nav-link dropdown-toggle\" href=\"# \" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n              Dropdown\r\n            </a>\r\n            <ul className=\"dropdown-menu\">\r\n              <li><a className=\"dropdown-item\" href=\"# \">Action</a></li>\r\n              <li><a className=\"dropdown-item\" href=\"# \">Another action</a></li>\r\n              <li><hr className=\"dropdown-divider\"/></li>\r\n              <li><a className=\"dropdown-item\" href=\"# \">Something else here</a></li>\r\n            </ul>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link disabled\" href='# '>Disabled</a>\r\n          </li>\r\n        </ul>\r\n        <form className=\"d-flex\" role=\"search\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n        </form>\r\n\r\n        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\"  id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n</div>\r\n\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = \r\n{title: PropTypes.string.isRequired,\r\naboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    aboutText: 'About'\r\n}","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        // console.log(\"Uppercase was clicked: \" + text)\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert('Converted to Upper case',\"success\");\r\n    }\r\n    const handleLowClick = ()=>{\r\n        // console.log(\"Uppercase was clicked: \" + text)\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert('Converted to Lower case',\"success\");\r\n    }\r\n    const clearText = ()=>{\r\n        // console.log(\"Uppercase was clicked: \" + text)\r\n        let newText = '';\r\n        setText(newText)\r\n        props.showAlert('Text cleared',\"success\");\r\n    }\r\n\r\n    const handleOnChange = (event)=>{\r\n      //  console.log(\"On change\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const handleCopy = () => {\r\n      //console.log(\"I am copy\");\r\n      let text = document.getElementById(\"myBox\");\r\n      text.select();\r\n      navigator.clipboard.writeText(text.value);\r\n      props.showAlert('Copied to Clipboard',\"success\");\r\n    }\r\n\r\n     const handleExtraSpaces = () => {\r\n      let newText = text.split(/[ ]+/);\r\n      setText(newText.join(\" \"));\r\n      props.showAlert('Extra spaces has been removed',\"success\");\r\n     }\r\n\r\n    //const [text, setText] = useState('Enter text here');\r\n    const [text, setText] = useState('');\r\n    //text = \"new text\"; // wrong way to change the state\r\n    //setText(\"new text\"); // correct way to change the state\r\n  return (\r\n    <>\r\n    <div className='container' style={{color:props.mode==='dark'?'white':'#121518'}}>\r\n        <h1>{props.heading} </h1>\r\n        <div className=\"mb-3\">\r\n        {/*<label for=\"myBox\" class=\"form-label\">Example textarea</label>*/}\r\n        <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode==='dark'?'#121518':'white', color:props.mode==='dark'?'white':'#121518'}} id=\"myBox\" rows=\"8\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleLowClick}>Convert to LowerCase</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={clearText}>Clear text</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>Copy Text</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n     </div>\r\n     <div className='container my-3'style={{color:props.mode==='dark'?'white':'#121518'}}>\r\n        <h2>Your text summary</h2>\r\n        <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n        <p>{0.008* text.split(\" \").length} Minutes read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Enter something in the textbox to preview it here.\"}</p>\r\n     </div>\r\n     </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n\r\n    }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`}role=\"alert\">\r\n  <strong>{capitalize(props.alert.type)} </strong>: {props.alert.msg} \r\n  <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n</div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n\r\n","//import logo from './logo.svg';\nimport React from 'react';\nimport {useCallback, useState } from 'react';\nimport './App.css';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport Alert from './Components/Alert';\n//import About from './Components/About';\n//import { BrowserRouter } from 'react-router-dom';\n//let name = \"Amit\";\n/*import {\n  BrowserRouter,\n  Routes,\n  Route,\n  Link\n} from \"react-router-dom\";*/\n\n\n\nfunction App() {\n  const [mode, setMode] = useState('light'); //whether dark mode is enable or not\n  const [alert,setAlert] = useState(null);\n\n  const showAlert = (message,type) => {\n    setAlert({\n      msg:message,\n      type:type,\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n  \n  const toggleMode = () => {\n    if(mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#121518';\n      showAlert(\"Dark mode has been enabled\",'success');\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\",'success');\n    }\n  }\n  return (\n    <>\n   \n  {/* <BrowserRouter>*/}\n{/*<Navbar title =\"Textutils\" aboutText=\"About Textutils\"/> */}\n<Navbar title = \"Textutils\" mode={mode} toggleMode={toggleMode}/>\n<Alert alert={alert}/>\n   {/*<Navbar/>*/}\n   <div className=\"container my-3\">\n\n{/*<Routes>\n          <Route exact path=\"/about\" element={<About />} />\n          \n          < Route exact path=\"/\"\n            element= {<TextForm heading=\"Enter the text to analyze below \" mode={mode}/>} /> \n  </Routes>*/}\n          </div>\n        {/* <BrowserRouter/>*/}\n\n   <TextForm showAlert={showAlert} heading=\"Enter The text to analyze below\" mode={mode}/>\n   {/*<About/>*/}\n   \n  \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}